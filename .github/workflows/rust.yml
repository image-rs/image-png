name: Rust CI
on:
  push:
    branches: [ master, main, next ]
  pull_request:
    branches: [ master, main, next ]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        rust: ["1.57.0", stable, beta, nightly]
        os: [ubuntu-latest, windows-latest, macos-latest]
        features: [""]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - uses: dtolnay/rust-toolchain@nightly
      if: ${{ matrix.rust == '1.57.0' }}
    - name: Generate Cargo.lock with minimal-version dependencies
      if: ${{ matrix.rust == '1.57.0' }}
      run: cargo -Zminimal-versions generate-lockfile

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
    - name: build
      run: |
        cargo build --verbose
  feature_check:
    strategy:
      matrix:
        features: ["", "benchmarks"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: check
      run: |
        cargo check --tests --no-default-features --features="$FEATURES"
      env:
        FEATURES: ${{ matrix.features }}
  powerpc_cross:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: add_cross_target
      run: |
        rustup target add powerpc-unknown-linux-gnu
        cargo build --target powerpc-unknown-linux-gnu
  test_all:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: rustup default stable
    - name: test
      run: >
        cargo test -v --all-targets
  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt
    - name: Run rustfmt check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check
